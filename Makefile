# Makefile.in generated by automake 1.16.5 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2013-2016 The Bitcoin Core developers
# Copyright (c) 2014-2018 The Dash Core developers
# Copyright (c) 2020-2022 The Bitoreum developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/bitoreumcore
pkgincludedir = $(includedir)/bitoreumcore
pkglibdir = $(libdir)/bitoreumcore
pkglibexecdir = $(libexecdir)/bitoreumcore
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin20.5.0
host_triplet = x86_64-apple-darwin20.5.0
am__append_1 = doc/man
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_find_bdb48.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_qt.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/l_atomic.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(dist_noinst_SCRIPTS) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config/bitoreum-config.h
CONFIG_CLEAN_FILES = libbitoreumconsensus.pc share/setup.nsi \
	share/qt/Info.plist test/config.ini \
	contrib/devtools/split-debug.sh doc/Doxyfile
CONFIG_CLEAN_VPATH_FILES = contrib/filter-lcov.py \
	test/functional/test_runner.py test/util/bitcoin-util-test.py \
	test/util/rpcauth-test.py
SCRIPTS = $(dist_noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkgconfigdir)"
DATA = $(pkgconfig_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir distdir-am dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
DIST_SUBDIRS = src doc/man
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(srcdir)/libbitoreumconsensus.pc.in \
	$(top_srcdir)/build-aux/compile \
	$(top_srcdir)/build-aux/config.guess \
	$(top_srcdir)/build-aux/config.sub \
	$(top_srcdir)/build-aux/install-sh \
	$(top_srcdir)/build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/missing \
	$(top_srcdir)/contrib/devtools/split-debug.sh.in \
	$(top_srcdir)/contrib/filter-lcov.py \
	$(top_srcdir)/doc/Doxyfile.in \
	$(top_srcdir)/share/qt/Info.plist.in \
	$(top_srcdir)/share/setup.nsi.in \
	$(top_srcdir)/src/config/bitoreum-config.h.in \
	$(top_srcdir)/test/config.ini.in \
	$(top_srcdir)/test/functional/test_runner.py \
	$(top_srcdir)/test/util/bitcoin-util-test.py \
	$(top_srcdir)/test/util/rpcauth-test.py COPYING INSTALL.md \
	README.md build-aux/compile build-aux/config.guess \
	build-aux/config.sub build-aux/install-sh build-aux/ltmain.sh \
	build-aux/missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
# Exists only to be overridden by the user if desired.
AM_DISTCHECK_DVI_TARGET = dvi
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} '/Users/marius/src/btm/build-aux/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /Library/Developer/CommandLineTools/usr/bin/ar
ARFLAGS = cr
AUTOCONF = ${SHELL} '/Users/marius/src/btm/build-aux/missing' autoconf
AUTOHEADER = ${SHELL} '/Users/marius/src/btm/build-aux/missing' autoheader
AUTOMAKE = ${SHELL} '/Users/marius/src/btm/build-aux/missing' automake-1.16
AVX2_CXXFLAGS = -mavx -mavx2
AWK = awk
BDB_CFLAGS = 
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx-4.8
BITCOIN_CLI_NAME = bitoreum-cli
BITCOIN_DAEMON_NAME = bitoreumd
BITCOIN_GUI_NAME = bitoreum-qt
BITCOIN_TX_NAME = bitoreum-tx
BOOST_CHRONO_LIB = -lboost_chrono-mt-x64
BOOST_CPPFLAGS = -DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC -pthread -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../include
BOOST_FILESYSTEM_LIB = -lboost_filesystem-mt-x64
BOOST_LDFLAGS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../lib
BOOST_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../lib -lboost_system-mt-x64 -lboost_filesystem-mt-x64 -lboost_program_options-mt-x64 -lboost_thread-mt-x64 -lboost_chrono-mt-x64
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-mt-x64
BOOST_SYSTEM_LIB = -lboost_system-mt-x64
BOOST_THREAD_LIB = -lboost_thread-mt-x64
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework-mt-x64
BREW = no
CC = /Library/Developer/CommandLineTools/usr/bin/clang -mmacosx-version-min=10.10 --sysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -pipe -O2  -g1 -fno-omit-frame-pointer
CLIENT_VERSION_BUILD = 99
CLIENT_VERSION_IS_RELEASE = true
CLIENT_VERSION_MAJOR = 1
CLIENT_VERSION_MINOR = 3
CLIENT_VERSION_REVISION = 17
COPYRIGHT_HOLDERS = The %s developers
COPYRIGHT_HOLDERS_FINAL = The Bitoreum Core developers
COPYRIGHT_HOLDERS_SUBSTITUTION = Bitoreum Core
COPYRIGHT_YEAR = 2022
CPP = /Library/Developer/CommandLineTools/usr/bin/clang -mmacosx-version-min=10.10 --sysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -E
CPPFILT = /usr/bin/c++filt
CPPFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../include/  -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0
CRYPTO_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include
CRYPTO_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lcrypto
CSCOPE = cscope
CTAGS = ctags
CXX = /Library/Developer/CommandLineTools/usr/bin/clang++ -mmacosx-version-min=10.10 -stdlib=libc++ -fvisibility=hidden --sysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -std=c++14
CXXCPP = /Library/Developer/CommandLineTools/usr/bin/clang++ -mmacosx-version-min=10.10 -stdlib=libc++ -fvisibility=hidden --sysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -std=c++14 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -pipe -O2  -g1 -fno-omit-frame-pointer
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = /usr/bin/dsymutil
DSYMUTIL_FLAT = /usr/bin/dsymutil -flat
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
ERROR_CXXFLAGS = 
ETAGS = etags
EVENT_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include
EVENT_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -levent
EVENT_PTHREADS_CFLAGS = -D_THREAD_SAFE -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include
EVENT_PTHREADS_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -levent_pthreads -levent
EXEEXT = 
EXTENDED_FUNCTIONAL_TESTS = 
FGREP = /usr/bin/grep -F
GCOV = /usr/bin/gcov
GENHTML = 
GENISOIMAGE = 
GIT = /usr/local/bin/git
GPROF_CXXFLAGS = 
GPROF_LDFLAGS = 
GREP = /usr/bin/grep
HARDENED_CPPFLAGS =  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2
HARDENED_CXXFLAGS =  -Wstack-protector -fstack-protector-all
HARDENED_LDFLAGS = 
HAVE_CXX14 = 1
HEXDUMP = /usr/bin/hexdump
IMAGEMAGICK_CONVERT = 
INSTALL = /usr/bin/install -c
INSTALLNAMETOOL = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LCOV_OPTS = 
LD = /Library/Developer/CommandLineTools/usr/bin/ld
LDFLAGS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../lib  -Wl,-headerpad_max_install_names -Wl,-dead_strip
LEVELDB_CPPFLAGS = 
LEVELDB_TARGET_FLAGS = -DOS_MACOSX
LIBLEVELDB = 
LIBMEMENV = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_APP_LDFLAGS = 
LIPO = lipo
LN_S = ln -s
LRELEASE = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../native/bin/lrelease
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUPDATE = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../native/bin/lupdate
MAINT = 
MAKEINFO = ${SHELL} '/Users/marius/src/btm/build-aux/missing' makeinfo
MAKENSIS = 
MANIFEST_TOOL = :
MINIUPNPC_CPPFLAGS = 
MINIUPNPC_LIBS = -lminiupnpc
MKDIR_P = ./build-aux/install-sh -c -d
MOC = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../native/bin/moc
MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir) -DQ_OS_MAC
NM = /Library/Developer/CommandLineTools/usr/bin/nm
NMEDIT = nmedit
OBJCOPY = 
OBJCXX = /Library/Developer/CommandLineTools/usr/bin/clang++ -mmacosx-version-min=10.10 -stdlib=libc++ -fvisibility=hidden --sysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -std=c++14
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = -pipe -O2  -g1 -fno-omit-frame-pointer
OBJDUMP = objdump
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = bitoreumcore
PACKAGE_BUGREPORT = https://github.com/bugahost/bitoreum/issues
PACKAGE_NAME = Bitoreum Core
PACKAGE_STRING = Bitoreum Core 1.3.17
PACKAGE_TARNAME = bitoreumcore
PACKAGE_URL = https://bitoreum.org/
PACKAGE_VERSION = 1.3.17
PATH_SEPARATOR = :
PIC_FLAGS = -fPIC
PIE_FLAGS = 
PKG_CONFIG = /usr/local/bin/pkg-config --static
PKG_CONFIG_LIBDIR = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../lib/pkgconfig
PKG_CONFIG_PATH = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../share/pkgconfig
PORT = no
PROTOBUF_CFLAGS = -D_THREAD_SAFE -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include
PROTOBUF_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lprotobuf -D_THREAD_SAFE -lz
PROTOC = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../native/bin/protoc
PTHREAD_CC = /Library/Developer/CommandLineTools/usr/bin/clang -mmacosx-version-min=10.10 --sysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = -lpthread
PYTHON = /usr/local/opt/python@3.7/bin/python3.7
PYTHONPATH = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../native/lib/python/dist-packages:
QR_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include
QR_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lqrencode -lpthread
QTACCESSIBILITY_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtAccessibilitySupport -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QTACCESSIBILITY_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5AccessibilitySupport -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QTCGL_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCglSupport -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QTCGL_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5CglSupport -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework AppKit -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QTCLIPBOARD_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtClipboardSupport -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QTCLIPBOARD_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5ClipboardSupport -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework AppKit -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QTDEVICEDISCOVERY_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtDeviceDiscoverySupport -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QTDEVICEDISCOVERY_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5DeviceDiscoverySupport -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QTEVENTDISPATCHER_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtEventDispatcherSupport -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QTEVENTDISPATCHER_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5EventDispatcherSupport -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QTFB_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtFbSupport -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QTFB_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5FbSupport -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QTFONTDATABASE_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtFontDatabaseSupport -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QTFONTDATABASE_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5FontDatabaseSupport -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework CoreFoundation -framework CoreGraphics -framework CoreText -framework Foundation -framework AppKit -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QTGRAPHICS_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGraphicsSupport -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QTGRAPHICS_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5GraphicsSupport -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QTTHEME_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtThemeSupport -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QTTHEME_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5ThemeSupport -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QTXCBQPA_CFLAGS = 
QTXCBQPA_LIBS = 
QT_CORE_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QT_CORE_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QT_DBUS_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtDBus -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QT_DBUS_INCLUDES = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtDBus -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QT_DBUS_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5DBus -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QT_GUI_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QT_GUI_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QT_INCLUDES = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtWidgets -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtNetwork -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QT_LDFLAGS = 
QT_LIBS = -lqcocoa -lqminimal -lQt5CglSupport -lQt5GraphicsSupport -lQt5ClipboardSupport -lQt5FbSupport -lQt5AccessibilitySupport -lQt5DeviceDiscoverySupport -lQt5ThemeSupport -lQt5EventDispatcherSupport -lQt5FontDatabaseSupport -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5Widgets -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework AppKit -lz -framework Carbon -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5Network -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework Security -framework CoreFoundation -framework CoreServices -framework SystemConfiguration -lz -lssl -lcrypto -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../plugins/platforms -framework IOKit -framework Foundation -framework ApplicationServices -framework AppKit
QT_NETWORK_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtNetwork -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QT_NETWORK_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5Network -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework Security -framework CoreFoundation -framework CoreServices -framework SystemConfiguration -lz -lssl -lcrypto -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QT_PIE_FLAGS = 
QT_SELECT = qt5
QT_TEST_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtTest -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QT_TEST_INCLUDES = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtTest -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QT_TEST_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5Test -framework Security -framework Foundation -framework ApplicationServices -framework IOKit -lQt5Core -framework DiskArbitration -lm -framework CoreServices -framework AppKit -framework CoreFoundation -lz -lqtpcre2 -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
QT_TRANSLATION_DIR = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../translations
QT_WIDGETS_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtWidgets -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtGui -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include/QtCore
QT_WIDGETS_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lQt5Widgets -lQt5Gui -framework DiskArbitration -framework IOKit -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -framework CoreGraphics -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -lQt5Core -lm -lz -lqtpcre2 -framework AppKit -lz -framework Carbon -framework OpenGL -framework AGL -lQt5Gui -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2 -framework AppKit -framework CoreGraphics -framework Foundation -framework OpenGL -framework AGL -lqtlibpng -lqtharfbuzz -framework ApplicationServices -lz -lQt5Core -framework DiskArbitration -framework IOKit -lm -framework Foundation -framework CoreServices -framework AppKit -framework ApplicationServices -framework CoreFoundation -lz -lqtpcre2
RANLIB = /Library/Developer/CommandLineTools/usr/bin/ranlib
RCC = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../native/bin/rcc
RCCFLAGS = --format-version 1
READELF = 
RELDFLAGS = 
RSVG_CONVERT = /usr/local/bin/rsvg-convert
SANITIZER_CXXFLAGS = 
SANITIZER_LDFLAGS = 
SED = /usr/bin/sed
SET_MAKE = 
SHANI_CXXFLAGS = -msse4 -msha
SHELL = /bin/sh
SSE41_CXXFLAGS = -msse4.1
SSE42_CXXFLAGS = -msse4.2
SSL_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include
SSL_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lssl -lcrypto
STRIP = /usr/bin/strip
TESTDEFS = 
TIFFCP = 
UIC = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/share/../native/bin/uic
UNIVALUE_CFLAGS = -I$(srcdir)/univalue/include
UNIVALUE_LIBS = univalue/libunivalue.la
USE_QRCODE = 
USE_UPNP = 
VERSION = 1.3.17
WINDOWS_BITS = 
WINDRES = 
XGETTEXT = /usr/local/bin/xgettext
ZMQ_CFLAGS = -I/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/include
ZMQ_LIBS = -L/Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0/lib -lzmq
abs_builddir = /Users/marius/src/btm
abs_srcdir = /Users/marius/src/btm
abs_top_builddir = /Users/marius/src/btm
abs_top_srcdir = /Users/marius/src/btm
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin20.5.0
build_alias = 
build_cpu = x86_64
build_os = darwin20.5.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin20.5.0
host_alias = x86_64-apple-darwin20.5.0
host_cpu = x86_64
host_os = darwin20.5.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/marius/src/btm/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/marius/src/btm/depends/x86_64-apple-darwin20.5.0
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/univalue src/secp256k1
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
ACLOCAL_AMFLAGS = -I build-aux/m4
SUBDIRS = src $(am__append_1)
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libbitoreumconsensus.pc
BITCOIND_BIN = $(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)
BITCOIN_QT_BIN = $(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)
BITCOIN_CLI_BIN = $(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)
BITCOIN_WIN_INSTALLER = $(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)
empty := 
space := $(empty) $(empty)
OSX_APP = Bitoreum-Qt.app
OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))
OSX_DMG = $(OSX_VOLNAME).dmg
OSX_BACKGROUND_SVG = background.svg
OSX_BACKGROUND_IMAGE = background.tiff
OSX_BACKGROUND_IMAGE_DPIS = 36 72
OSX_DSSTORE_GEN = $(top_srcdir)/contrib/macdeploy/custom_dsstore.py
OSX_DEPLOY_SCRIPT = $(top_srcdir)/contrib/macdeploy/macdeployqtplus
OSX_FANCY_PLIST = $(top_srcdir)/contrib/macdeploy/fancy.plist
OSX_INSTALLER_ICONS = $(top_srcdir)/src/qt/res/icons/bitoreum.icns
OSX_PLIST = $(top_builddir)/share/qt/Info.plist #not installed
OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW
DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)
DIST_CONTRIB = $(top_srcdir)/contrib/bitoreum-cli.bash-completion \
	       $(top_srcdir)/contrib/bitoreum-tx.bash-completion \
	       $(top_srcdir)/contrib/bitoreumd.bash-completion \
	       $(top_srcdir)/contrib/init

DIST_SHARE = \
  $(top_srcdir)/share/genbuild.sh \
  $(top_srcdir)/share/rpcauth

BIN_CHECKS = $(top_srcdir)/contrib/devtools/symbol-check.py \
           $(top_srcdir)/contrib/devtools/security-check.py

WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitoreum.ico \
  $(top_srcdir)/share/pixmaps/nsis-header.bmp \
  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \
  $(top_srcdir)/doc/README_windows.txt

OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_INSTALLER_ICONS) \
  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \
  $(OSX_DSSTORE_GEN) \
  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \
  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh

COVERAGE_INFO = baseline.info \
  test_bitoreum_filtered.info total_coverage.info \
  baseline_filtered.info functional_test.info functional_test_filtered.info \
  test_bitoreum_coverage.info test_bitoreum.info

OSX_APP_BUILT = $(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \
  $(OSX_APP)/Contents/Resources/bitoreum.icns $(OSX_APP)/Contents/Info.plist \
  $(OSX_APP)/Contents/MacOS/Bitoreum-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings

#APP_DIST_DIR = $(top_builddir)/dist
#APP_DIST_EXTRAS = $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications
#OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))
#LCOV_FILTER_PATTERN = -p "/usr/include/" -p "src/leveldb/" -p "src/bench/" -p "src/univalue" -p "src/crypto/ctaes" -p "src/secp256k1"
dist_noinst_SCRIPTS = autogen.sh
EXTRA_DIST = $(DIST_SHARE) test/functional/test_runner.py \
	test/functional $(DIST_CONTRIB) $(DIST_DOCS) \
	$(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS) \
	test/util/bitcoin-util-test.py \
	test/util/data/bitcoin-util-test.json \
	test/util/data/blanktxv1.hex test/util/data/blanktxv1.json \
	test/util/data/blanktxv2.hex test/util/data/blanktxv2.json \
	test/util/data/tt-delin1-out.hex \
	test/util/data/tt-delin1-out.json \
	test/util/data/tt-delout1-out.hex \
	test/util/data/tt-delout1-out.json \
	test/util/data/tt-locktime317000-out.hex \
	test/util/data/tt-locktime317000-out.json \
	test/util/data/tx394b54bb.hex test/util/data/txcreate1.hex \
	test/util/data/txcreate1.json test/util/data/txcreate2.hex \
	test/util/data/txcreate2.json test/util/data/txcreatedata1.hex \
	test/util/data/txcreatedata1.json \
	test/util/data/txcreatedata2.hex \
	test/util/data/txcreatedata2.json \
	test/util/data/txcreatedata_seq0.hex \
	test/util/data/txcreatedata_seq0.json \
	test/util/data/txcreatedata_seq1.hex \
	test/util/data/txcreatedata_seq1.json \
	test/util/data/txcreatemultisig1.hex \
	test/util/data/txcreatemultisig1.json \
	test/util/data/txcreatemultisig2.hex \
	test/util/data/txcreatemultisig2.json \
	test/util/data/txcreateoutpubkey1.hex \
	test/util/data/txcreateoutpubkey1.json \
	test/util/data/txcreatescript1.hex \
	test/util/data/txcreatescript1.json \
	test/util/data/txcreatescript2.hex \
	test/util/data/txcreatescript2.json \
	test/util/data/txcreatesignv1.hex \
	test/util/data/txcreatesignv1.json \
	test/util/data/txcreatesignv2.hex test/util/rpcauth-test.py
CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)
DISTCHECK_CONFIGURE_FLAGS = --enable-man
all: all-recursive

.SUFFIXES:
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

src/config/bitoreum-config.h: src/config/stamp-h1
	@test -f $@ || rm -f src/config/stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) src/config/stamp-h1

src/config/stamp-h1: $(top_srcdir)/src/config/bitoreum-config.h.in $(top_builddir)/config.status
	@rm -f src/config/stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config/bitoreum-config.h
$(top_srcdir)/src/config/bitoreum-config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f src/config/stamp-h1
	touch $@

distclean-hdr:
	-rm -f src/config/bitoreum-config.h src/config/stamp-h1
libbitoreumconsensus.pc: $(top_builddir)/config.status $(srcdir)/libbitoreumconsensus.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
share/setup.nsi: $(top_builddir)/config.status $(top_srcdir)/share/setup.nsi.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
share/qt/Info.plist: $(top_builddir)/config.status $(top_srcdir)/share/qt/Info.plist.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
test/config.ini: $(top_builddir)/config.status $(top_srcdir)/test/config.ini.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
contrib/devtools/split-debug.sh: $(top_builddir)/config.status $(top_srcdir)/contrib/devtools/split-debug.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
#doc/Doxyfile: $(top_builddir)/config.status $(top_srcdir)/doc/Doxyfile.in
#	cd $(top_builddir) && $(SHELL) ./config.status $@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-zstd: distdir
	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	*.tar.zst*) \
	  zstd -dc $(distdir).tar.zst | $(am__untar) ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) $(AM_DISTCHECK_DVI_TARGET) \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(SCRIPTS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkgconfigdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-hdr \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-pkgconfigDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-pkgconfigDATA

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-cscope clean-generic \
	clean-libtool clean-local cscope cscopelist-am ctags ctags-am \
	dist dist-all dist-bzip2 dist-gzip dist-hook dist-lzip \
	dist-shar dist-tarZ dist-xz dist-zip dist-zstd distcheck \
	distclean distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-pkgconfigDATA install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-pkgconfigDATA

.PRECIOUS: Makefile

.PHONY: deploy FORCE

export PYTHONPATH

dist-hook:
	-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -

$(BITCOIN_WIN_INSTALLER): all-recursive
	$(MKDIR_P) $(top_builddir)/release
	STRIPPROG="$(STRIP)" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release
	STRIPPROG="$(STRIP)" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release
	STRIPPROG="$(STRIP)" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release
	@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \
	  echo error: could not build $@
	@echo built $@

$(OSX_APP)/Contents/PkgInfo:
	$(MKDIR_P) $(@D)
	@echo "APPL????" > $@

$(OSX_APP)/Contents/Resources/empty.lproj:
	$(MKDIR_P) $(@D)
	@touch $@

$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)
	$(MKDIR_P) $(@D)
	$(INSTALL_DATA) $< $@

$(OSX_APP)/Contents/Resources/bitoreum.icns: $(OSX_INSTALLER_ICONS)
	$(MKDIR_P) $(@D)
	$(INSTALL_DATA) $< $@

$(OSX_APP)/Contents/MacOS/Bitoreum-Qt: all-recursive
	$(MKDIR_P) $(@D)
	STRIPPROG="$(STRIP)" $(INSTALL_STRIP_PROGRAM)  $(BITCOIN_QT_BIN) $@

$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:
	$(MKDIR_P) $(@D)
	echo '{	CFBundleDisplayName = "$(PACKAGE_NAME)"; CFBundleName = "$(PACKAGE_NAME)"; }' > $@

osx_volname:
	echo $(OSX_VOLNAME) >$@

$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING) $(OSX_BACKGROUND_IMAGE)
	$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -verbose 2 -volname $(OSX_VOLNAME)

$(OSX_BACKGROUND_IMAGE).png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)
	sed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < "$<" | $(RSVG_CONVERT) -f png -d 36 -p 36 -o $@
$(OSX_BACKGROUND_IMAGE)@2x.png: contrib/macdeploy/$(OSX_BACKGROUND_SVG)
	sed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < "$<" | $(RSVG_CONVERT) -f png -d 72 -p 72 -o $@
$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE).png $(OSX_BACKGROUND_IMAGE)@2x.png
	tiffutil -cathidpicheck $^ -out $@

deploydir: $(OSX_DMG)

#$(APP_DIST_DIR)/Applications:
#	@rm -f $@
#	@cd $(@D); $(LN_S) /Applications $(@F)

#$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitoreum-Qt

#$(OSX_DMG): $(APP_DIST_EXTRAS)
#	$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V "$(OSX_VOLNAME)" -no-pad -r -dir-mode 0755 -apple -o $@ dist

#dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)
#	sed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < "$<" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@
#$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)
#	$(MKDIR_P) $(@D)
#	$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@

#$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)
#	$(PYTHON) $< "$@" "$(OSX_VOLNAME)"

#$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitoreum-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)
#	INSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2

#deploydir: $(APP_DIST_EXTRAS)

appbundle: $(OSX_APP_BUILT)
deploy: $(OSX_DMG)
#deploy: $(BITCOIN_WIN_INSTALLER)

$(BITCOIN_QT_BIN): FORCE
	$(MAKE) -C src qt/$(@F)

$(BITCOIND_BIN): FORCE
	$(MAKE) -C src $(@F)

$(BITCOIN_CLI_BIN): FORCE
	$(MAKE) -C src $(@F)

#baseline.info:
#	$(LCOV) -c -i -d $(abs_builddir)/src -o $@

#baseline_filtered.info: baseline.info
#	$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@
#	$(LCOV) -a $@ $(LCOV_OPTS) -o $@

#test_bitoreum.info: baseline_filtered.info
#	$(MAKE) -C src/ check
#	$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitoreum -o $@
#	$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src

#test_bitoreum_filtered.info: test_bitoreum.info
#	$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@
#	$(LCOV) -a $@ $(LCOV_OPTS) -o $@

#functional_test.info: test_bitoreum_filtered.info
#	-@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)
#	$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@
#	$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src

#functional_test_filtered.info: functional_test.info
#	$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@
#	$(LCOV) -a $@ $(LCOV_OPTS) -o $@

#test_bitoreum_coverage.info: baseline_filtered.info test_bitoreum_filtered.info
#	$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitoreum_filtered.info -o $@

#total_coverage.info: test_bitoreum_filtered.info functional_test_filtered.info
#	$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitoreum_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) "\%" | $(AWK) '{ print substr($$3,2,50) "/" $$5 }' > coverage_percent.txt

#test_bitoreum.coverage/.dirstamp:  test_bitoreum_coverage.info
#	$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)
#	@touch $@

#total.coverage/.dirstamp: total_coverage.info
#	$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)
#	@touch $@

#cov: test_bitoreum.coverage/.dirstamp total.coverage/.dirstamp

.INTERMEDIATE: $(COVERAGE_INFO)

doc/doxygen/.stamp: doc/Doxyfile FORCE
	$(MKDIR_P) $(@D)
	$(DOXYGEN) $^
	$(AM_V_at) touch $@

#docs: doc/doxygen/.stamp
docs:
	@echo "error: doxygen not found"

clean-docs:
	rm -rf doc/doxygen

clean-local: clean-docs
	rm -rf coverage_percent.txt test_bitoreum.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP) src/qt/moc_*
	rm -rf test/functional/__pycache__ test/functional/test_framework/__pycache__ test/cache

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
